# Generated by Django 4.2.7 on 2025-08-24 23:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("landings", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="APIIntegration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Название")),
                (
                    "integration_type",
                    models.CharField(
                        choices=[
                            ("amocrm", "AmoCRM"),
                            ("whatsapp", "WhatsApp"),
                            ("telegram", "Telegram"),
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("payment", "Payment"),
                            ("analytics", "Analytics"),
                            ("crm", "CRM"),
                            ("webhook", "Webhook"),
                            ("api", "Custom API"),
                        ],
                        max_length=20,
                        verbose_name="Тип интеграции",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Активна"),
                            ("inactive", "Неактивна"),
                            ("error", "Ошибка"),
                            ("testing", "Тестирование"),
                            ("maintenance", "Обслуживание"),
                        ],
                        default="inactive",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                ("api_url", models.URLField(blank=True, verbose_name="API URL")),
                (
                    "api_key",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="API Key"
                    ),
                ),
                (
                    "api_secret",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="API Secret"
                    ),
                ),
                (
                    "access_token",
                    models.TextField(blank=True, verbose_name="Access Token"),
                ),
                (
                    "refresh_token",
                    models.TextField(blank=True, verbose_name="Refresh Token"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Истекает в"
                    ),
                ),
                (
                    "webhook_url",
                    models.URLField(blank=True, verbose_name="Webhook URL"),
                ),
                (
                    "webhook_secret",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Webhook Secret"
                    ),
                ),
                ("config", models.JSONField(default=dict, verbose_name="Конфигурация")),
                (
                    "auto_sync",
                    models.BooleanField(
                        default=False, verbose_name="Автосинхронизация"
                    ),
                ),
                (
                    "sync_interval",
                    models.IntegerField(
                        default=3600, verbose_name="Интервал синхронизации (сек)"
                    ),
                ),
                (
                    "last_sync",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Последняя синхронизация"
                    ),
                ),
                (
                    "sync_count",
                    models.IntegerField(
                        default=0, verbose_name="Количество синхронизаций"
                    ),
                ),
                (
                    "error_count",
                    models.IntegerField(default=0, verbose_name="Количество ошибок"),
                ),
                (
                    "last_error",
                    models.TextField(blank=True, verbose_name="Последняя ошибка"),
                ),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создатель",
                    ),
                ),
                (
                    "landings",
                    models.ManyToManyField(
                        blank=True, to="landings.landing", verbose_name="Лендинги"
                    ),
                ),
            ],
            options={
                "verbose_name": "API интеграция",
                "verbose_name_plural": "API интеграции",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("lead_created", "Создан лид"),
                            ("lead_updated", "Обновлен лид"),
                            ("deal_created", "Создана сделка"),
                            ("deal_updated", "Обновлена сделка"),
                            ("contact_created", "Создан контакт"),
                            ("contact_updated", "Обновлен контакт"),
                            ("form_submitted", "Отправлена форма"),
                            ("payment_received", "Получен платеж"),
                            ("custom", "Пользовательское событие"),
                        ],
                        max_length=20,
                        verbose_name="Тип события",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает"),
                            ("sent", "Отправлено"),
                            ("failed", "Ошибка"),
                            ("retry", "Повторная попытка"),
                        ],
                        default="pending",
                        max_length=10,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "payload",
                    models.JSONField(default=dict, verbose_name="Данные события"),
                ),
                ("response", models.JSONField(default=dict, verbose_name="Ответ")),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Сообщение об ошибке"),
                ),
                (
                    "retry_count",
                    models.IntegerField(default=0, verbose_name="Количество попыток"),
                ),
                (
                    "next_retry",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Следующая попытка"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата отправки"
                    ),
                ),
                (
                    "integration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhook_events",
                        to="integrations.apiintegration",
                        verbose_name="Интеграция",
                    ),
                ),
            ],
            options={
                "verbose_name": "Webhook событие",
                "verbose_name_plural": "Webhook события",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="IntegrationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Временная метка"
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "Debug"),
                            ("INFO", "Info"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="INFO",
                        max_length=10,
                        verbose_name="Уровень",
                    ),
                ),
                ("message", models.TextField(verbose_name="Сообщение")),
                ("data", models.JSONField(default=dict, verbose_name="Данные")),
                (
                    "integration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="integrations.apiintegration",
                        verbose_name="Интеграция",
                    ),
                ),
            ],
            options={
                "verbose_name": "Лог интеграции",
                "verbose_name_plural": "Логи интеграций",
                "ordering": ["-timestamp"],
            },
        ),
    ]
