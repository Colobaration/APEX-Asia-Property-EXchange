# Generated by Django 4.2.7 on 2025-08-24 23:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("integrations", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("landings", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Название")),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("whatsapp", "WhatsApp"),
                            ("telegram", "Telegram"),
                            ("sms", "SMS"),
                            ("push", "Push уведомление"),
                        ],
                        max_length=20,
                        verbose_name="Тип шаблона",
                    ),
                ),
                (
                    "subject",
                    models.CharField(blank=True, max_length=255, verbose_name="Тема"),
                ),
                ("content", models.TextField(verbose_name="Содержание")),
                (
                    "variables",
                    models.JSONField(default=dict, verbose_name="Переменные"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Активен"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Создатель",
                    ),
                ),
            ],
            options={
                "verbose_name": "Шаблон уведомления",
                "verbose_name_plural": "Шаблоны уведомлений",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recipient",
                    models.CharField(max_length=255, verbose_name="Получатель"),
                ),
                (
                    "subject",
                    models.CharField(blank=True, max_length=255, verbose_name="Тема"),
                ),
                ("content", models.TextField(verbose_name="Содержание")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает"),
                            ("sent", "Отправлено"),
                            ("failed", "Ошибка"),
                            ("cancelled", "Отменено"),
                            ("delivered", "Доставлено"),
                            ("read", "Прочитано"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "sent_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата отправки"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Сообщение об ошибке"),
                ),
                ("metadata", models.JSONField(default=dict, verbose_name="Метаданные")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "integration",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="integrations.apiintegration",
                        verbose_name="Интеграция",
                    ),
                ),
                (
                    "landing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="landings.landing",
                        verbose_name="Лендинг",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="logs.notificationtemplate",
                        verbose_name="Шаблон",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Лог уведомления",
                "verbose_name_plural": "Логи уведомлений",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SystemLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Временная метка"
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("DEBUG", "Debug"),
                            ("INFO", "Info"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="INFO",
                        max_length=10,
                        verbose_name="Уровень",
                    ),
                ),
                (
                    "log_type",
                    models.CharField(
                        choices=[
                            ("system", "Система"),
                            ("api", "API"),
                            ("landing", "Лендинг"),
                            ("integration", "Интеграция"),
                            ("user", "Пользователь"),
                            ("security", "Безопасность"),
                            ("database", "База данных"),
                            ("email", "Email"),
                            ("webhook", "Webhook"),
                        ],
                        default="system",
                        max_length=20,
                        verbose_name="Тип лога",
                    ),
                ),
                ("source", models.CharField(max_length=100, verbose_name="Источник")),
                ("message", models.TextField(verbose_name="Сообщение")),
                ("data", models.JSONField(default=dict, verbose_name="Данные")),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP адрес"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "integration",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="integrations.apiintegration",
                        verbose_name="Интеграция",
                    ),
                ),
                (
                    "landing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="landings.landing",
                        verbose_name="Лендинг",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Системный лог",
                "verbose_name_plural": "Системные логи",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="logs_system_timesta_1ce06b_idx"
                    ),
                    models.Index(fields=["level"], name="logs_system_level_875cae_idx"),
                    models.Index(
                        fields=["log_type"], name="logs_system_log_typ_7c5f9b_idx"
                    ),
                    models.Index(
                        fields=["source"], name="logs_system_source_325ff4_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SecurityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Временная метка"
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("login_success", "Успешный вход"),
                            ("login_failed", "Неудачный вход"),
                            ("logout", "Выход"),
                            ("password_change", "Смена пароля"),
                            ("password_reset", "Сброс пароля"),
                            ("account_locked", "Блокировка аккаунта"),
                            ("suspicious_activity", "Подозрительная активность"),
                            ("api_access", "Доступ к API"),
                            ("file_access", "Доступ к файлу"),
                            ("data_export", "Экспорт данных"),
                            ("admin_action", "Действие администратора"),
                        ],
                        max_length=30,
                        verbose_name="Тип события",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP адрес")),
                ("user_agent", models.TextField(verbose_name="User Agent")),
                ("details", models.JSONField(default=dict, verbose_name="Детали")),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Низкий"),
                            ("medium", "Средний"),
                            ("high", "Высокий"),
                            ("critical", "Критический"),
                        ],
                        default="low",
                        max_length=10,
                        verbose_name="Уровень риска",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Лог безопасности",
                "verbose_name_plural": "Логи безопасности",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="logs_securi_timesta_b47ddb_idx"
                    ),
                    models.Index(
                        fields=["event_type"], name="logs_securi_event_t_919db6_idx"
                    ),
                    models.Index(
                        fields=["user"], name="logs_securi_user_id_e3d719_idx"
                    ),
                    models.Index(
                        fields=["ip_address"], name="logs_securi_ip_addr_92563a_idx"
                    ),
                    models.Index(
                        fields=["risk_level"], name="logs_securi_risk_le_e98f3a_idx"
                    ),
                ],
            },
        ),
    ]
