#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ best practices –¥–ª—è –ª—é–±–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
import django
from datetime import datetime, timedelta
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'apex_admin.settings')
django.setup()

from django.contrib.auth.models import User
from landings.models import Landing, LandingAnalytics
from integrations.models import APIIntegration, IntegrationLog, WebhookEvent
from analytics.models import Dashboard, Metric, DashboardMetric, Report, ReportExecution, AnalyticsEvent
from logs.models import SystemLog, NotificationTemplate, NotificationLog, SecurityLog


def create_universal_best_practices_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ best practices –¥–ª—è –ª—é–±–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã"""
    
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ best practices...")
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–æ–≤ –ø–æ best practices
    print("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –ª–µ–Ω–¥–∏–Ω–≥–æ–≤...")
    
    landings_data = [
        {
            'name': '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∏—Å—Ç–µ–º—ã',
            'slug': 'main',
            'domain': 'apex-asia.com',
            'status': 'active',
            'configuration': {
                'theme': 'modern',
                'cta_button': '–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É',
                'hero_section': True,
                'features_section': True,
                'contact_form': True,
                'pricing_section': True
            },
            'utm_source': 'direct',
            'utm_medium': 'organic',
            'utm_campaign': 'main_page'
        },
        {
            'name': '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ–¥—É–∫—Ç–∞',
            'slug': 'product',
            'domain': 'apex-asia.com',
            'status': 'active',
            'configuration': {
                'theme': 'professional',
                'cta_button': '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
                'product_demo': True,
                'testimonials': True,
                'pricing_table': True,
                'faq_section': True
            },
            'utm_source': 'google',
            'utm_medium': 'cpc',
            'utm_campaign': 'product_launch'
        },
        {
            'name': '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
            'slug': 'docs',
            'domain': 'apex-asia.com',
            'status': 'active',
            'configuration': {
                'theme': 'documentation',
                'cta_button': '–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É',
                'search_functionality': True,
                'code_examples': True,
                'api_reference': True,
                'tutorials': True
            },
            'utm_source': 'organic',
            'utm_medium': 'search',
            'utm_campaign': 'documentation'
        },
        {
            'name': '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤',
            'slug': 'contact',
            'domain': 'apex-asia.com',
            'status': 'active',
            'configuration': {
                'theme': 'contact',
                'cta_button': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',
                'contact_form': True,
                'office_locations': True,
                'support_channels': True,
                'social_links': True
            },
            'utm_source': 'direct',
            'utm_medium': 'organic',
            'utm_campaign': 'contact_page'
        }
    ]
    
    for landing_data in landings_data:
        landing, created = Landing.objects.get_or_create(
            slug=landing_data['slug'],
            defaults=landing_data
        )
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –ª–µ–Ω–¥–∏–Ω–≥: {landing.name}")
    
    # 2. –°–æ–∑–¥–∞–Ω–∏–µ API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π –ø–æ best practices
    print("üîó –°–æ–∑–¥–∞–Ω–∏–µ API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π...")
    
    integrations_data = [
        {
            'name': '–û—Å–Ω–æ–≤–Ω–∞—è CRM —Å–∏—Å—Ç–µ–º–∞',
            'integration_type': 'amocrm',
            'api_key': 'crm_prod_key_123',
            'api_secret': 'crm_prod_secret_456',
            'webhook_url': 'https://api.apex-asia.com/webhooks/crm/',
            'status': 'active',
            'sync_frequency': 300,  # 5 –º–∏–Ω—É—Ç
            'last_sync': datetime.now() - timedelta(hours=1)
        },
        {
            'name': '–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
            'integration_type': 'whatsapp',
            'api_key': 'notifications_key_789',
            'api_secret': 'notifications_secret_012',
            'webhook_url': 'https://api.apex-asia.com/webhooks/notifications/',
            'status': 'active',
            'sync_frequency': 60,  # 1 –º–∏–Ω—É—Ç–∞
            'last_sync': datetime.now() - timedelta(minutes=30)
        },
        {
            'name': 'Telegram Bot –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
            'integration_type': 'telegram',
            'api_key': 'telegram_bot_token_345',
            'api_secret': '',
            'webhook_url': 'https://api.apex-asia.com/webhooks/telegram/',
            'status': 'active',
            'sync_frequency': 30,  # 30 —Å–µ–∫—É–Ω–¥
            'last_sync': datetime.now() - timedelta(minutes=15)
        },
        {
            'name': 'Email —Å–µ—Ä–≤–∏—Å',
            'integration_type': 'email',
            'api_key': 'smtp_username',
            'api_secret': 'smtp_password',
            'webhook_url': '',
            'status': 'active',
            'sync_frequency': 0,  # –ü–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
            'last_sync': datetime.now() - timedelta(hours=2)
        },
        {
            'name': '–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
            'integration_type': 'analytics',
            'api_key': 'analytics_key_567',
            'api_secret': 'analytics_secret_890',
            'webhook_url': 'https://api.apex-asia.com/webhooks/analytics/',
            'status': 'active',
            'sync_frequency': 600,  # 10 –º–∏–Ω—É—Ç
            'last_sync': datetime.now() - timedelta(minutes=45)
        },
        {
            'name': '–°–∏—Å—Ç–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π',
            'integration_type': 'payment',
            'api_key': 'payment_key_123',
            'api_secret': 'payment_secret_456',
            'webhook_url': 'https://api.apex-asia.com/webhooks/payments/',
            'status': 'active',
            'sync_frequency': 120,  # 2 –º–∏–Ω—É—Ç—ã
            'last_sync': datetime.now() - timedelta(minutes=20)
        }
    ]
    
    for integration_data in integrations_data:
        integration, created = APIIntegration.objects.get_or_create(
            name=integration_data['name'],
            defaults=integration_data
        )
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {integration.name}")
    
    # 3. –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–æ–≤ –ø–æ best practices
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–æ–≤...")
    
    dashboards_data = [
        {
            'name': '–û–±—â–∏–π –æ–±–∑–æ—Ä —Å–∏—Å—Ç–µ–º—ã',
            'description': '–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã',
            'is_public': True,
            'refresh_interval': 300
        },
        {
            'name': '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
            'description': '–ü–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏',
            'is_public': True,
            'refresh_interval': 600
        },
        {
            'name': '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã',
            'description': '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤',
            'is_public': False,
            'refresh_interval': 60
        },
        {
            'name': '–ë–∏–∑–Ω–µ—Å –º–µ—Ç—Ä–∏–∫–∏',
            'description': '–ö–ª—é—á–µ–≤—ã–µ –±–∏–∑–Ω–µ—Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏',
            'is_public': True,
            'refresh_interval': 1800
        },
        {
            'name': '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
            'description': '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å API –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
            'is_public': False,
            'refresh_interval': 120
        }
    ]
    
    for dashboard_data in dashboards_data:
        dashboard, created = Dashboard.objects.get_or_create(
            name=dashboard_data['name'],
            defaults=dashboard_data
        )
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –¥–∞—à–±–æ—Ä–¥: {dashboard.name}")
    
    # 4. –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –ø–æ best practices
    print("üìà –°–æ–∑–¥–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫...")
    
    metrics_data = [
        {
            'name': '–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            'description': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ',
            'metric_type': 'counter',
            'unit': '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            'calculation_method': 'sum'
        },
        {
            'name': '–ö–æ–Ω–≤–µ—Ä—Å–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π',
            'description': '–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å',
            'metric_type': 'percentage',
            'unit': '%',
            'calculation_method': 'average'
        },
        {
            'name': '–í—Ä–µ–º—è –æ—Ç–∫–ª–∏–∫–∞ API',
            'description': '–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ API',
            'metric_type': 'duration',
            'unit': '–º—Å',
            'calculation_method': 'average'
        },
        {
            'name': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫',
            'description': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ',
            'metric_type': 'counter',
            'unit': '–æ—à–∏–±–∫–∏',
            'calculation_method': 'sum'
        },
        {
            'name': '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤',
            'description': '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU –∏ –ø–∞–º—è—Ç–∏',
            'metric_type': 'percentage',
            'unit': '%',
            'calculation_method': 'average'
        },
        {
            'name': '–¢—Ä–∞—Ñ–∏–∫ –Ω–∞ —Å–∞–π—Ç',
            'description': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–µ—â–µ–Ω–∏–π —Å–∞–π—Ç–∞',
            'metric_type': 'counter',
            'unit': '–ø–æ—Å–µ—â–µ–Ω–∏—è',
            'calculation_method': 'sum'
        },
        {
            'name': '–£—Å–ø–µ—à–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
            'description': '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π',
            'metric_type': 'counter',
            'unit': '—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏',
            'calculation_method': 'sum'
        },
        {
            'name': '–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã',
            'description': 'Uptime —Å–∏—Å—Ç–µ–º—ã',
            'metric_type': 'percentage',
            'unit': '%',
            'calculation_method': 'average'
        }
    ]
    
    for metric_data in metrics_data:
        metric, created = Metric.objects.get_or_create(
            name=metric_data['name'],
            defaults=metric_data
        )
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–µ—Ç—Ä–∏–∫–∞: {metric.name}")
    
    # 5. –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ best practices
    print("üìß –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    
    templates_data = [
        {
            'name': '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            'notification_type': 'email',
            'subject': '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è',
            'content': '''
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ:
- Email: {{ user_email }}
- –ò–º—è: {{ user_name }}
- –ò—Å—Ç–æ—á–Ω–∏–∫: {{ source }}
- –í—Ä–µ–º—è: {{ registration_time }}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            ''',
            'is_active': True
        },
        {
            'name': '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞',
            'notification_type': 'telegram',
            'subject': 'üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ',
            'content': '''
–í–ù–ò–ú–ê–ù–ò–ï! –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ:

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç: {{ component }}
–û—à–∏–±–∫–∞: {{ error_message }}
–í—Ä–µ–º—è: {{ timestamp }}
–°–µ—Ä–≤–µ—Ä: {{ server_name }}

–¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ!
            ''',
            'is_active': True
        },
        {
            'name': '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç',
            'notification_type': 'email',
            'subject': 'üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç —Å–∏—Å—Ç–µ–º—ã - {{ date }}',
            'content': '''
–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç —Å–∏—Å—Ç–µ–º—ã

üìà –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏:
- –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {{ active_users }}
- –ù–æ–≤—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {{ new_registrations }}
- –¢—Ä–∞—Ñ–∏–∫: {{ traffic_count }}
- –û—à–∏–±–∫–∏: {{ errors_count }}
- Uptime: {{ uptime }}%

üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:
- CRM: {{ crm_status }}
- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {{ notifications_status }}
- –ü–ª–∞—Ç–µ–∂–∏: {{ payments_status }}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            ''',
            'is_active': True
        },
        {
            'name': '–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ä–µ—Å—É—Ä—Å–∞—Ö',
            'notification_type': 'telegram',
            'subject': '‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤',
            'content': '''
–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Ä–µ—Å—É—Ä—Å–∞—Ö:

–°–µ—Ä–≤–µ—Ä: {{ server_name }}
CPU: {{ cpu_usage }}%
–ü–∞–º—è—Ç—å: {{ memory_usage }}%
–î–∏—Å–∫: {{ disk_usage }}%

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–≥—Ä—É–∑–∫—É.
            ''',
            'is_active': True
        },
        {
            'name': '–£—Å–ø–µ—à–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
            'notification_type': 'email',
            'subject': '‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',
            'content': '''
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:

–°–µ—Ä–≤–∏—Å: {{ service_name }}
–í—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {{ recovery_time }}
–°—Ç–∞—Ç—É—Å: {{ status }}

–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ.
            ''',
            'is_active': True
        }
    ]
    
    for template_data in templates_data:
        template, created = NotificationTemplate.objects.get_or_create(
            name=template_data['name'],
            defaults=template_data
        )
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω: {template.name}")
    
    # 6. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤ –ø–æ best practices
    print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤...")
    
    logs_data = [
        {
            'level': 'INFO',
            'message': '–°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞',
            'log_type': 'system',
            'context': {'component': 'initialization', 'status': 'success'}
        },
        {
            'level': 'INFO',
            'message': '–í—Å–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç',
            'log_type': 'integration',
            'context': {'integrations_count': 6, 'status': 'active'}
        },
        {
            'level': 'WARNING',
            'message': '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã',
            'log_type': 'security',
            'context': {'component': 'ssl', 'priority': 'medium'}
        },
        {
            'level': 'INFO',
            'message': '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞',
            'log_type': 'database',
            'context': {'component': 'database', 'status': 'synced'}
        },
        {
            'level': 'INFO',
            'message': '–ö—ç—à –æ—á–∏—â–µ–Ω –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω',
            'log_type': 'performance',
            'context': {'component': 'cache', 'action': 'optimized'}
        }
    ]
    
    for log_data in logs_data:
        log = SystemLog.objects.create(**log_data)
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –ª–æ–≥: {log.message[:50]}...")
    
    # 7. –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ª–µ–Ω–¥–∏–Ω–≥–æ–≤
    print("üìä –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ª–µ–Ω–¥–∏–Ω–≥–æ–≤...")
    
    landings = Landing.objects.all()
    for landing in landings:
        # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        for i in range(7):
            date = datetime.now().date() - timedelta(days=i)
            analytics, created = LandingAnalytics.objects.get_or_create(
                landing=landing,
                date=date,
                defaults={
                    'visitors': 150 + (i * 25),
                    'conversions': 8 + (i * 3),
                    'session_duration': 200 + (i * 15),
                    'bounce_rate': 40.0 - (i * 1.5),
                    'traffic_source': json.dumps({
                        'organic': 55,
                        'direct': 30,
                        'social': 10,
                        'paid': 5
                    })
                }
            )
            if created:
                print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è {landing.name} –Ω–∞ {date}")
    
    # 8. –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
    print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤...")
    
    reports_data = [
        {
            'name': '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç —Å–∏—Å—Ç–µ–º—ã',
            'description': '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Ä–∞–±–æ—Ç–µ —Å–∏—Å—Ç–µ–º—ã',
            'report_type': 'daily',
            'schedule': '0 9 * * *',  # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00
            'is_active': True
        },
        {
            'name': '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
            'description': '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö',
            'report_type': 'weekly',
            'schedule': '0 10 * * 1',  # –ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 10:00
            'is_active': True
        },
        {
            'name': '–ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            'description': '–ú–µ—Å—è—á–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã',
            'report_type': 'monthly',
            'schedule': '0 11 1 * *',  # –ü–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞ –≤ 11:00
            'is_active': True
        }
    ]
    
    for report_data in reports_data:
        report, created = Report.objects.get_or_create(
            name=report_data['name'],
            defaults=report_data
        )
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç: {report.name}")
    
    print("\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ best practices –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–æ–∑–¥–∞–Ω–æ:")
    print(f"  - –õ–µ–Ω–¥–∏–Ω–≥–æ–≤: {Landing.objects.count()}")
    print(f"  - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π: {APIIntegration.objects.count()}")
    print(f"  - –î–∞—à–±–æ—Ä–¥–æ–≤: {Dashboard.objects.count()}")
    print(f"  - –ú–µ—Ç—Ä–∏–∫: {Metric.objects.count()}")
    print(f"  - –®–∞–±–ª–æ–Ω–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {NotificationTemplate.objects.count()}")
    print(f"  - –°–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–æ–≤: {SystemLog.objects.count()}")
    print(f"  - –ê–Ω–∞–ª–∏—Ç–∏–∫–∏ –ª–µ–Ω–¥–∏–Ω–≥–æ–≤: {LandingAnalytics.objects.count()}")
    print(f"  - –û—Ç—á–µ—Ç–æ–≤: {Report.objects.count()}")
    
    print("\nüöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("üìä –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8002/admin/")
    print("üë§ –õ–æ–≥–∏–Ω: admin / –ü–∞—Ä–æ–ª—å: admin123")


if __name__ == '__main__':
    create_universal_best_practices_data()
