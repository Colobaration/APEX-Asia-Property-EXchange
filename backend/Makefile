# APEX Asia Property Exchange - Backend Makefile
# –£–¥–æ–±–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

.PHONY: help dev install lint format test migrate migrate-up migrate-down migrate-create migrate-reset migrate-status init-db clean docker-build docker-run

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python
ALEMBIC_CONFIG = alembic.ini
SCRIPTS_DIR = scripts

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "APEX Asia Property Exchange - Backend Management"
	@echo "=============================================="
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2}'

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	pip install -e ".[dev]"
	pre-commit install

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–∞–º–∏
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞..."
	ruff check .
	mypy app/

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	black .
	isort .
	ruff check --fix .

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	pytest --cov=app --cov-report=term-missing

test-watch: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –≤ —Ä–µ–∂–∏–º–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
	@echo "üëÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ —Ä–µ–∂–∏–º–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è..."
	pytest --cov=app --cov-report=term-missing --watch

migrate: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ (upgrade head)
	@echo "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
	$(PYTHON) $(SCRIPTS_DIR)/run_migrations.py

migrate-up: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
	@echo "‚¨ÜÔ∏è  –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –≤–≤–µ—Ä—Ö..."
	alembic -c $(ALEMBIC_CONFIG) upgrade head

migrate-down: ## –û—Ç–∫–∞—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ –æ–¥–Ω—É –≤–µ—Ä—Å–∏—é –Ω–∞–∑–∞–¥
	@echo "‚¨áÔ∏è  –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–π..."
	alembic -c $(ALEMBIC_CONFIG) downgrade -1

migrate-reset: ## –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã)
	@echo "‚ö†Ô∏è  –°–±—Ä–æ—Å –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π (—É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü)..."
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ! (y/N): " confirm && [ "$$confirm" = "y" ]
	alembic -c $(ALEMBIC_CONFIG) downgrade base

migrate-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
	@echo "üìä –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:"
	alembic -c $(ALEMBIC_CONFIG) current
	alembic -c $(ALEMBIC_CONFIG) history

migrate-create: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é (—Ç—Ä–µ–±—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ MESSAGE="–æ–ø–∏—Å–∞–Ω–∏–µ")
	@if [ -z "$(MESSAGE)" ]; then \
		echo "‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏"; \
		echo "–ü—Ä–∏–º–µ—Ä: make migrate-create MESSAGE=\"Add user table\""; \
		exit 1; \
	fi
	@echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏: $(MESSAGE)"
	$(PYTHON) $(SCRIPTS_DIR)/create_migration.py "$(MESSAGE)"

init-db: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—Å–æ–∑–¥–∞—Ç—å –ë–î, –º–∏–≥—Ä–∞—Ü–∏–∏, –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
	@echo "üóÑÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	$(PYTHON) $(SCRIPTS_DIR)/init_db.py

test-migrations: ## –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ (—Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –ë–î)
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	# –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –ë–î
	@echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	pip install -r requirements.txt
	@echo "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"

dev-migrate: ## –ë—ã—Å—Ç—Ä–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "‚ö° –ë—ã—Å—Ç—Ä–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	alembic -c $(ALEMBIC_CONFIG) upgrade head

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
prod-migrate: ## –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
	@echo "üöÄ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞..."
	@echo "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."
	alembic -c $(ALEMBIC_CONFIG) current
	@echo "üìã –ü–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–∏:"
	alembic -c $(ALEMBIC_CONFIG) upgrade head --sql
	@read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é? (y/N): " confirm && [ "$$confirm" = "y" ]
	alembic -c $(ALEMBIC_CONFIG) upgrade head

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è Docker
docker-migrate: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üê≥ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –≤ Docker..."
	docker-compose -f ../docker-compose.staging.yml exec backend python scripts/run_migrations.py

docker-init-db: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ë–î –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "üê≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –≤ Docker..."
	docker-compose -f ../docker-compose.staging.yml exec backend python scripts/init_db.py

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
	@echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏:"
	@echo "  ‚Ä¢ Python: $(shell python --version)"
	@echo "  ‚Ä¢ Alembic: $(shell alembic --version 2>/dev/null || echo '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
	@echo "  ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $(ALEMBIC_CONFIG)"
	@echo "  ‚Ä¢ –°–∫—Ä–∏–ø—Ç—ã: $(SCRIPTS_DIR)"

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name ".pytest_cache" -delete
	find . -type d -name ".mypy_cache" -delete
	find . -type d -name ".ruff_cache" -delete
	rm -rf htmlcov/
	rm -f .coverage
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	docker build -t apex-backend .

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker
	@echo "üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker..."
	docker run -p 8000:8000 --env-file .env apex-backend
