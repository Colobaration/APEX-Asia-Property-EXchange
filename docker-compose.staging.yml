version: "3.9"

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: asia-backend-staging
    ports:
      - "8001:8000"
    environment:
      - ENVIRONMENT=staging
      - PYTHONPATH=/app
      - LOG_LEVEL=WARNING
      - INIT_DB=false
      - RUN_MIGRATIONS=false
      - DATABASE_URL=postgresql://asia:asia@db:5432/asia_crm_staging
      - REDIS_URL=redis://redis:6379
      # ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      # –≠—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è staging/development
      - SECRET_KEY=your-staging-secret-key-change-in-production
      - JWT_SECRET=your-staging-jwt-secret-change-in-production
      - ALLOWED_HOSTS_RAW=localhost,127.0.0.1,*.apex-asia.com
      - CORS_ORIGINS_RAW=http://localhost:3000,https://staging.apex-asia.com
      
      # üîê AmoCRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - –¥–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets
      - AMOCRM_CLIENT_ID=${AMOCRM_CLIENT_ID:-}
      - AMOCRM_CLIENT_SECRET=${AMOCRM_CLIENT_SECRET:-}
      - AMOCRM_REDIRECT_URI=${AMOCRM_REDIRECT_URI:-http://api.staging.apex-asia.com/auth/amocrm/callback}
      - AMOCRM_SUBDOMAIN=${AMOCRM_SUBDOMAIN:-}
      
      # üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è - –¥–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-}
      - WHATSAPP_API_URL=${WHATSAPP_API_URL:-}
      - WHATSAPP_API_KEY=${WHATSAPP_API_KEY:-}
      
      # üìß Email - –¥–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets
      - EMAIL_SMTP_HOST=${EMAIL_SMTP_HOST:-}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT:-587}
      - EMAIL_USERNAME=${EMAIL_USERNAME:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - EMAIL_FROM=${EMAIL_FROM:-}
      
      # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è staging
      # - LOG_FILE=app.log
    depends_on:
      - db
      - redis
    restart: unless-stopped
    volumes:
      - backend_logs:/app/logs
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "--method=GET", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.staging.apex-asia.com`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "portainer.stack.name=apex-staging"

  db:
    image: postgres:15-alpine
    container_name: asia-db-staging
    environment:
      POSTGRES_USER: asia
      POSTGRES_PASSWORD: asia
      POSTGRES_DB: asia_crm_staging
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pgdata_staging:/var/lib/postgresql/data
      - ./backend/alembic:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-asia} -d ${DB_NAME:-asia_crm_staging}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "portainer.stack.name=apex-staging"

  redis:
    image: redis:7-alpine
    container_name: asia-redis-staging
    ports:
      - "6380:6379"
    volumes:
      - redis_data_staging:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "portainer.stack.name=apex-staging"

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: asia-frontend-staging
    ports:
      - "3000:3000"
    environment:
      - ENVIRONMENT=staging
      - NEXT_PUBLIC_API_URL=http://api.staging.apex-asia.com
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`staging.apex-asia.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "portainer.stack.name=apex-staging"



volumes:
  pgdata_staging:
    driver: local
  redis_data_staging:
    driver: local
  backend_logs:
    driver: local

networks:
  default:
    name: apex-staging-network
    driver: bridge
