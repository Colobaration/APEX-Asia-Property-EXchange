version: "3.9"

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: asia-backend-staging
    ports:
      - "${BACKEND_PORT:-8001}:8000"
    env_file:
      - .env.staging
    environment:
      - ENVIRONMENT=staging
      - PYTHONPATH=/app
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - INIT_DB=true
    depends_on:
      - db
      - redis
    restart: unless-stopped
    volumes:
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.staging.apex-asia.com`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "portainer.stack.name=apex-staging"

  db:
    image: postgres:15-alpine
    container_name: asia-db-staging
    env_file:
      - .env.staging
    environment:
      POSTGRES_USER: ${DB_USER:-asia}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-asia}
      POSTGRES_DB: ${DB_NAME:-asia_crm_staging}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pgdata_staging:/var/lib/postgresql/data
      - ./backend/alembic:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5433}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-asia} -d ${DB_NAME:-asia_crm_staging}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "portainer.stack.name=apex-staging"

  redis:
    image: redis:7-alpine
    container_name: asia-redis-staging
    ports:
      - "${REDIS_PORT:-6380}:6379"
    volumes:
      - redis_data_staging:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "portainer.stack.name=apex-staging"

  nginx:
    image: nginx:alpine
    container_name: asia-nginx-staging
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx-staging.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`staging.apex-asia.com`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "portainer.stack.name=apex-staging"

volumes:
  pgdata_staging:
    driver: local
  redis_data_staging:
    driver: local

networks:
  default:
    name: apex-staging-network
    driver: bridge
