version: "3.9"

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: asia-backend-dev
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - LOG_LEVEL=DEBUG
      - INIT_DB=true
      - RUN_MIGRATIONS=true
      - DATABASE_URL=postgresql://asia:asia@db:5432/asia_crm_dev
      - REDIS_URL=redis://redis:6379/0
      # ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –î–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      # –≠—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è staging/development
      - SECRET_KEY=your-dev-secret-key-change-in-production
      - JWT_SECRET=your-dev-jwt-secret-change-in-production
      - ALLOWED_HOSTS_RAW=localhost,127.0.0.1,*.apex-asia.com
      - CORS_ORIGINS_RAW=http://localhost:3001,https://dev.apex-asia.com
      
      # üîê AmoCRM –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è - –¥–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets
      - AMOCRM_CLIENT_ID=${AMOCRM_CLIENT_ID:-}
      - AMOCRM_CLIENT_SECRET=${AMOCRM_CLIENT_SECRET:-}
      - AMOCRM_REDIRECT_URI=${AMOCRM_REDIRECT_URI:-http://api.dev.apex-asia.com/auth/amocrm/callback}
      - AMOCRM_SUBDOMAIN=${AMOCRM_SUBDOMAIN:-}
      
      # üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è - –¥–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-}
      - WHATSAPP_API_URL=${WHATSAPP_API_URL:-}
      - WHATSAPP_API_KEY=${WHATSAPP_API_KEY:-}
      
      # üìß Email - –¥–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets
      - EMAIL_SMTP_HOST=${EMAIL_SMTP_HOST:-}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT:-587}
      - EMAIL_USERNAME=${EMAIL_USERNAME:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - EMAIL_FROM=${EMAIL_FROM:-}
      
      # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è development
      # - LOG_FILE=app.log
    depends_on:
      - db
      - redis
    restart: unless-stopped
    volumes:
      - backend_logs:/app/logs
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.dev.apex-asia.com`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "portainer.stack.name=apex-dev"

  db:
    image: postgres:15-alpine
    container_name: asia-db-dev
    environment:
      POSTGRES_USER: asia
      POSTGRES_PASSWORD: asia
      POSTGRES_DB: asia_crm_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
      - ./backend/alembic:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-asia} -d ${DB_NAME:-asia_crm_dev}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "portainer.stack.name=apex-dev"

  redis:
    image: redis:7-alpine
    container_name: asia-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "portainer.stack.name=apex-dev"

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: asia-frontend-dev
    ports:
      - "3001:3000"
    environment:
      - ENVIRONMENT=development
      - NEXT_PUBLIC_API_URL=http://api.dev.apex-asia.com
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`dev.apex-asia.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "portainer.stack.name=apex-dev"

  # üéõÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å APEX
  admin-panel:
    build: 
      context: ./admin_panel
      dockerfile: Dockerfile
    container_name: asia-admin-panel-dev
    ports:
      - "8003:8000"
    environment:
      - ENVIRONMENT=development
      - DJANGO_DEBUG=True
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,*.apex-asia.com
      - POSTGRES_DB=asia_crm_dev
      - POSTGRES_USER=asia
      - POSTGRES_PASSWORD=asia
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      # üîê API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ - –¥–ª—è production –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker Secrets
      - AMOCRM_CLIENT_ID=${AMOCRM_CLIENT_ID:-}
      - AMOCRM_CLIENT_SECRET=${AMOCRM_CLIENT_SECRET:-}
      - AMOCRM_REDIRECT_URI=${AMOCRM_REDIRECT_URI:-http://admin.dev.apex-asia.com/api/auth/amocrm/callback}
      - WHATSAPP_API_KEY=${WHATSAPP_API_KEY:-}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      # üìß Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      - EMAIL_HOST=${EMAIL_SMTP_HOST:-}
      - EMAIL_PORT=${EMAIL_SMTP_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_USERNAME:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_PASSWORD:-}
    depends_on:
      - db
      - redis
    restart: unless-stopped
    volumes:
      - admin_panel_logs:/app/logs
      - admin_panel_media:/app/media
      - admin_panel_static:/app/staticfiles
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "apex_admin.wsgi:application"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin-panel.rule=Host(`admin.dev.apex-asia.com`)"
      - "traefik.http.services.admin-panel.loadbalancer.server.port=8000"
      - "portainer.stack.name=apex-dev"



volumes:
  pgdata_dev:
    driver: local
  redis_data_dev:
    driver: local
  backend_logs:
    driver: local
  admin_panel_logs:
    driver: local
  admin_panel_media:
    driver: local
  admin_panel_static:
    driver: local

networks:
  default:
    name: apex-dev-network
    driver: bridge
